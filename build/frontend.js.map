{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/react-google-charts/dist/index.js","webpack:///./src/frontend/block/actions/index.js","webpack:///./src/frontend/block/base-control/index.js","webpack:///./src/frontend/block/base-control/notes.js","webpack:///./src/frontend/block/index.js","webpack:///./src/frontend/block/store/context.js","webpack:///./src/frontend/chart/index.js","webpack:///./src/frontend/index.js","webpack:///./src/frontend/styles.css?502a","webpack:///external [\"wp\",\"apiFetch\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"coreData\"]","webpack:///external [\"wp\",\"data\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"i18n\"]","webpack:///external [\"wp\",\"url\"]","webpack:///external \"React\""],"names":["useAppContext","startDate","setStartDate","__","event","target","value","cardTitle","chartData","chartOptions","chartType","chartHeadings","chartNotes","mapFunction","url","useState","error","setError","fetchingData","setFetchingData","useEffect","apiFetch","path","then","data","catch","getContent","message","length","notes","showNotes","setShowNotes","map","note","Block","setChartData","title","headings","type","options","isPrivate","_isPrivate","fullUrl","addQueryArgs","removeQueryArgs","hasPermission","useSelect","select","coreStore","canUser","split","trim","JSON","parse","props","StateContext","createContext","getDate","dateObj","subtract","month","getUTCMonth","paddedMonth","year","getUTCFullYear","day","getUTCDate","paddedDay","AppContext","children","qStartDate","getQueryArg","initDate","Date","context","useContext","undefined","Error","defaultOptions","chartArea","left","top","width","height","legend","position","hAxis","textStyle","fontSize","vAxis","init","containers","document","querySelectorAll","forEach","container","render","createElement","dataset","addEventListener"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA,wCAAwC,SAAS;AACjD;AACA;;AAEA;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACXA;AACA;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACLA,uBAAuB,mBAAO,CAAC,wFAAuB;;AAEtD;AACA;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA,6E;;;;;;;;;;;AChBA;AACA;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACLA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,2BAA2B,+BAA+B;AAC1D;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6E;;;;;;;;;;;AC/BA;AACA;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACLA;AACA;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACLA,qBAAqB,mBAAO,CAAC,oFAAqB;;AAElD,2BAA2B,mBAAO,CAAC,gGAA2B;;AAE9D,iCAAiC,mBAAO,CAAC,4GAAiC;;AAE1E,sBAAsB,mBAAO,CAAC,sFAAsB;;AAEpD;AACA;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACbA,wBAAwB,mBAAO,CAAC,0FAAwB;;AAExD,sBAAsB,mBAAO,CAAC,sFAAsB;;AAEpD,iCAAiC,mBAAO,CAAC,4GAAiC;;AAE1E,wBAAwB,mBAAO,CAAC,0FAAwB;;AAExD;AACA;AACA;;AAEA;AACA,6E;;;;;;;;;;;ACbA,uBAAuB,mBAAO,CAAC,wFAAuB;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6E;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACa;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2CAA2C;AAC3C,4CAA4C,sDAAQ;AACpD,gCAAgC,sDAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,+BAA+B;AACxC;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,IAAI,uDAAS;AACb;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,KAAK;AACL,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,SAAS,YAAY;AACpH;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA,OAAO,uBAAuB,iBAAiB,mDAAmB;AAClE;AACA,SAAS,oBAAoB;AAC7B,yBAAyB,mDAAmB;AAC5C;AACA,KAAK;AACL;AACA;AACA,SAAS,UAAU;AACnB,yBAAyB,mDAAmB;AAC5C;AACA,KAAK;AACL;;AAEA;AACA,wCAAwC,+CAAe;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,aAAa;AACb;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oJAAoJ;AACrK,mBAAmB,+BAA+B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,mCAAmC,+CAAe;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAsD;AACrE,6BAA6B,mDAAmB;AAChD;AACA,qCAAqC,mDAAmB,4CAA4C;AACpG;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;;AAEA,gCAAgC,+CAAe;AAC/C;AACA;AACA;AACA;AACA,aAAa,6CAA6C;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C;AACA,kFAAkF,aAAa;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C,6BAA6B,mDAAmB;AAChD;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,0BAA0B,+CAAe;AACzC;AACA,eAAe,yGAAyG;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA,0BAA0B,qBAAqB;AAC/C,uBAAuB,gDAAgD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oCAAoC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAmB;AACpD;AACA;AACA,aAAa,gBAAgB,mDAAmB;AAChD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,iCAAiC,mDAAmB;AACpD;AACA;AACA,aAAa;AACb,qBAAqB,eAAe;AACpC;AACA,aAAa;AACb,qBAAqB,eAAe;AACpC;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+CAAe;AAC1D,yCAAyC,+CAAe;AACxD;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA,uBAAuB,8FAA8F;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,WAAW;AAChC;AACA,aAAa;AACb;AACA,uBAAuB,yBAAyB;AAChD,uBAAuB,qBAAqB;AAC5C;AACA;AACA,2BAA2B,wBAAwB;AACnD;AACA;AACA,0FAA0F,aAAa;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,qEAAqE;AACxF;AACA;AACA;AACA;AACA;AACA,iCAAiC,mDAAmB;AACpD;AACA;AACA;AACA,aAAa,2FAA2F,mDAAmB,CAAC,8CAAc,sBAAsB,mDAAmB;AACnL;AACA;AACA;AACA,aAAa,iBAAiB,mDAAmB;AACjD;AACA;AACA,aAAa;AACb;AACA;AAC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","file":"frontend.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/frontend/index.js\");\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import * as React from 'react';\nimport { useEffect, useState } from 'react';\n\n/**\n * Hook to load external script.\n * @param src - Source url to load.\n * @param onLoad - Success callback.\n * @param onError - Error callback.\n */ function useLoadScript(src, onLoad, onError) {\n    useEffect(()=>{\n        if (!document) {\n            return;\n        }\n        // Find script tag with same src in DOM.\n        const foundScript = document.querySelector(\"script[src=\\\"\".concat(src, \"\\\"]\"));\n        // Call onLoad if script marked as loaded.\n        if (foundScript === null || foundScript === void 0 ? void 0 : foundScript.dataset.loaded) {\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad();\n            return;\n        }\n        // Create or get existed tag.\n        const script = foundScript || document.createElement(\"script\");\n        // Set src if no script was found.\n        if (!foundScript) {\n            script.src = src;\n        }\n        // Mark script as loaded on load event.\n        const onLoadWithMarker = ()=>{\n            script.dataset.loaded = \"1\";\n            onLoad === null || onLoad === void 0 ? void 0 : onLoad();\n        };\n        script.addEventListener(\"load\", onLoadWithMarker);\n        if (onError) {\n            script.addEventListener(\"error\", onError);\n        }\n        // Add to DOM if not yet added.\n        if (!foundScript) {\n            document.head.append(script);\n        }\n        return ()=>{\n            script.removeEventListener(\"load\", onLoadWithMarker);\n            if (onError) {\n                script.removeEventListener(\"error\", onError);\n            }\n        };\n    }, []);\n}\n\n/**\n * Hook to load Google Charts JS API.\n * @param params - Load parameters.\n * @param [params.chartVersion] - Chart version to load.\n * @param [params.chartPackages] - Packages to load.\n * @param [params.chartLanguage] - Languages to load.\n * @param [params.mapsApiKey] - Google Maps api key.\n * @returns\n */ function useLoadGoogleCharts(param) {\n    let { chartVersion =\"current\" , chartPackages =[\n        \"corechart\",\n        \"controls\"\n    ] , chartLanguage =\"en\" , mapsApiKey  } = param;\n    const [googleCharts, setGoogleCharts] = useState(null);\n    const [failed, setFailed] = useState(false);\n    useLoadScript(\"https://www.gstatic.com/charts/loader.js\", ()=>{\n        // @ts-expect-error Getting object from global namespace.\n        const google = window === null || window === void 0 ? void 0 : window.google;\n        if (!google) {\n            return;\n        }\n        google.charts.load(chartVersion, {\n            packages: chartPackages,\n            language: chartLanguage,\n            mapsApiKey\n        });\n        google.charts.setOnLoadCallback(()=>{\n            setGoogleCharts(google);\n        });\n    }, ()=>{\n        setFailed(true);\n    });\n    return [\n        googleCharts,\n        failed\n    ];\n}\n/**\n * Wrapper around useLoadGoogleCharts to use in legacy components.\n */ function LoadGoogleCharts(param) {\n    let { onLoad , onError , ...params } = param;\n    const [googleCharts, failed] = useLoadGoogleCharts(params);\n    useEffect(()=>{\n        if (googleCharts && onLoad) {\n            onLoad(googleCharts);\n        }\n    }, [\n        googleCharts\n    ]);\n    useEffect(()=>{\n        if (failed && onError) {\n            onError();\n        }\n    }, [\n        failed\n    ]);\n    return null;\n}\n\nconst chartDefaultProps = {\n    // <DEPRECATED_PROPS>\n    legend_toggle: false,\n    // </DEPRECATED_PROPS>\n    options: {},\n    legendToggle: false,\n    getChartWrapper: ()=>{},\n    spreadSheetQueryParameters: {\n        headers: 1,\n        gid: 1\n    },\n    rootProps: {},\n    chartWrapperParams: {}\n};\n\nlet uniqueID = 0;\nconst generateUniqueID = ()=>{\n    uniqueID += 1;\n    return \"reactgooglegraph-\".concat(uniqueID);\n};\n\nconst DEFAULT_CHART_COLORS = [\n    \"#3366CC\",\n    \"#DC3912\",\n    \"#FF9900\",\n    \"#109618\",\n    \"#990099\",\n    \"#3B3EAC\",\n    \"#0099C6\",\n    \"#DD4477\",\n    \"#66AA00\",\n    \"#B82E2E\",\n    \"#316395\",\n    \"#994499\",\n    \"#22AA99\",\n    \"#AAAA11\",\n    \"#6633CC\",\n    \"#E67300\",\n    \"#8B0707\",\n    \"#329262\",\n    \"#5574A6\",\n    \"#3B3EAC\"\n];\n\nconst loadDataTableFromSpreadSheet = async function(googleViz, spreadSheetUrl) {\n    let urlParams = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    return new Promise((resolve, reject)=>{\n        const headers = \"\".concat(urlParams.headers ? \"headers=\".concat(urlParams.headers) : \"headers=0\");\n        const queryString = \"\".concat(urlParams.query ? \"&tq=\".concat(encodeURIComponent(urlParams.query)) : \"\");\n        const gid = \"\".concat(urlParams.gid ? \"&gid=\".concat(urlParams.gid) : \"\");\n        const sheet = \"\".concat(urlParams.sheet ? \"&sheet=\".concat(urlParams.sheet) : \"\");\n        const access_token = \"\".concat(urlParams.access_token ? \"&access_token=\".concat(urlParams.access_token) : \"\");\n        const urlQueryString = \"\".concat(headers).concat(gid).concat(sheet).concat(queryString).concat(access_token);\n        const urlToSpreadSheet = \"\".concat(spreadSheetUrl, \"/gviz/tq?\").concat(urlQueryString); //&tq=${queryString}`;\n        const query = new googleViz.visualization.Query(urlToSpreadSheet);\n        query.send((response)=>{\n            if (response.isError()) {\n                reject(\"Error in query:  \".concat(response.getMessage(), \" \").concat(response.getDetailedMessage()));\n            } else {\n                resolve(response.getDataTable());\n            }\n        });\n    });\n};\n\nconst { Provider , Consumer  } = /*#__PURE__*/ React.createContext(chartDefaultProps);\nconst ContextProvider = (param)=>{\n    let { children , value  } = param;\n    return(/*#__PURE__*/ React.createElement(Provider, {\n        value: value\n    }, children));\n};\nconst ContextConsumer = (param)=>{\n    let { render  } = param;\n    return(/*#__PURE__*/ React.createElement(Consumer, null, (context)=>{\n        return render(context);\n    }));\n};\n\nconst GRAY_COLOR = \"#CCCCCC\";\nclass GoogleChartDataTableInner extends React.Component {\n    componentDidMount() {\n        this.draw(this.props);\n        window.addEventListener(\"resize\", this.onResize);\n        if (this.props.legend_toggle || this.props.legendToggle) {\n            this.listenToLegendToggle();\n        }\n    }\n    componentWillUnmount() {\n        const { google , googleChartWrapper  } = this.props;\n        window.removeEventListener(\"resize\", this.onResize);\n        google.visualization.events.removeAllListeners(googleChartWrapper);\n        if (googleChartWrapper.getChartType() === \"Timeline\") {\n            googleChartWrapper.getChart() && googleChartWrapper.getChart().clearChart();\n        }\n    }\n    componentDidUpdate() {\n        this.draw(this.props);\n    }\n    render() {\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        this.state = {\n            hiddenColumns: []\n        };\n        this.listenToLegendToggle = ()=>{\n            const { google , googleChartWrapper  } = this.props;\n            google.visualization.events.addListener(googleChartWrapper, \"select\", ()=>{\n                const chart = googleChartWrapper.getChart();\n                const selection = chart.getSelection();\n                const dataTable = googleChartWrapper.getDataTable();\n                if (selection.length === 0 || // We want to listen to when a whole row is selected. This is the case only when row === null\n                selection[0].row || !dataTable) {\n                    return;\n                }\n                const columnIndex = selection[0].column;\n                const columnID = this.getColumnID(dataTable, columnIndex);\n                if (this.state.hiddenColumns.includes(columnID)) {\n                    this.setState((state)=>({\n                            ...state,\n                            hiddenColumns: [\n                                ...state.hiddenColumns.filter((colID)=>colID !== columnID\n                                ), \n                            ]\n                        })\n                    );\n                } else {\n                    this.setState((state)=>({\n                            ...state,\n                            hiddenColumns: [\n                                ...state.hiddenColumns,\n                                columnID\n                            ]\n                        })\n                    );\n                }\n            });\n        };\n        this.applyFormatters = (dataTable, formatters)=>{\n            const { google  } = this.props;\n            for (let formatter of formatters){\n                switch(formatter.type){\n                    case \"ArrowFormat\":\n                        {\n                            const vizFormatter = new google.visualization.ArrowFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"BarFormat\":\n                        {\n                            const vizFormatter = new google.visualization.BarFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"ColorFormat\":\n                        {\n                            const vizFormatter = new google.visualization.ColorFormat(formatter.options);\n                            const { ranges  } = formatter;\n                            for (let range of ranges){\n                                vizFormatter.addRange(...range);\n                            }\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"DateFormat\":\n                        {\n                            const vizFormatter = new google.visualization.DateFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"NumberFormat\":\n                        {\n                            const vizFormatter = new google.visualization.NumberFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                    case \"PatternFormat\":\n                        {\n                            const vizFormatter = new google.visualization.PatternFormat(formatter.options);\n                            vizFormatter.format(dataTable, formatter.column);\n                            break;\n                        }\n                }\n            }\n        };\n        this.getColumnID = (dataTable, columnIndex)=>{\n            return dataTable.getColumnId(columnIndex) || dataTable.getColumnLabel(columnIndex);\n        };\n        this.draw = async (param)=>{\n            let { data , diffdata , rows , columns , options , legend_toggle , legendToggle , chartType , formatters , spreadSheetUrl , spreadSheetQueryParameters  } = param;\n            const { google , googleChartWrapper  } = this.props;\n            let dataTable;\n            let chartDiff = null;\n            if (diffdata) {\n                const oldData = google.visualization.arrayToDataTable(diffdata.old);\n                const newData = google.visualization.arrayToDataTable(diffdata.new);\n                chartDiff = google.visualization[chartType].prototype.computeDiff(oldData, newData);\n            }\n            if (data !== null) {\n                if (Array.isArray(data)) {\n                    dataTable = google.visualization.arrayToDataTable(data);\n                } else {\n                    dataTable = new google.visualization.DataTable(data);\n                }\n            } else if (rows && columns) {\n                dataTable = google.visualization.arrayToDataTable([\n                    columns,\n                    ...rows\n                ]);\n            } else if (spreadSheetUrl) {\n                dataTable = await loadDataTableFromSpreadSheet(google, spreadSheetUrl, spreadSheetQueryParameters);\n            } else {\n                dataTable = google.visualization.arrayToDataTable([]);\n            }\n            const columnCount = dataTable.getNumberOfColumns();\n            for(let i = 0; i < columnCount; i += 1){\n                const columnID = this.getColumnID(dataTable, i);\n                if (this.state.hiddenColumns.includes(columnID)) {\n                    const previousColumnLabel = dataTable.getColumnLabel(i);\n                    const previousColumnID = dataTable.getColumnId(i);\n                    const previousColumnType = dataTable.getColumnType(i);\n                    dataTable.removeColumn(i);\n                    dataTable.addColumn({\n                        label: previousColumnLabel,\n                        id: previousColumnID,\n                        type: previousColumnType\n                    });\n                }\n            }\n            const chart = googleChartWrapper.getChart();\n            if (googleChartWrapper.getChartType() === \"Timeline\") {\n                chart && chart.clearChart();\n            }\n            googleChartWrapper.setChartType(chartType);\n            googleChartWrapper.setOptions(options || {});\n            googleChartWrapper.setDataTable(dataTable);\n            googleChartWrapper.draw();\n            if (this.props.googleChartDashboard !== null) {\n                this.props.googleChartDashboard.draw(dataTable);\n            }\n            if (chartDiff) {\n                googleChartWrapper.setDataTable(chartDiff);\n                googleChartWrapper.draw();\n            }\n            if (formatters) {\n                this.applyFormatters(dataTable, formatters);\n                googleChartWrapper.setDataTable(dataTable);\n                googleChartWrapper.draw();\n            }\n            if (legendToggle === true || legend_toggle === true) {\n                this.grayOutHiddenColumns({\n                    options\n                });\n            }\n            return;\n        };\n        this.grayOutHiddenColumns = (param)=>{\n            let { options  } = param;\n            const { googleChartWrapper  } = this.props;\n            const dataTable = googleChartWrapper.getDataTable();\n            if (!dataTable) return;\n            const columnCount = dataTable.getNumberOfColumns();\n            const hasAHiddenColumn = this.state.hiddenColumns.length > 0;\n            if (hasAHiddenColumn === false) return;\n            const colors = Array.from({\n                length: columnCount - 1\n            }).map((dontcare, i)=>{\n                const columnID = this.getColumnID(dataTable, i + 1);\n                if (this.state.hiddenColumns.includes(columnID)) {\n                    return GRAY_COLOR;\n                } else if (options && options.colors) {\n                    return options.colors[i];\n                } else {\n                    return DEFAULT_CHART_COLORS[i];\n                }\n            });\n            googleChartWrapper.setOptions({\n                ...options,\n                colors\n            });\n            googleChartWrapper.draw();\n        };\n        this.onResize = ()=>{\n            const { googleChartWrapper  } = this.props;\n            googleChartWrapper.draw();\n        };\n    }\n}\nclass GoogleChartDataTable extends React.Component {\n    componentDidMount() {}\n    componentWillUnmount() {}\n    shouldComponentUpdate() {\n        return false;\n    }\n    render() {\n        const { google , googleChartWrapper , googleChartDashboard  } = this.props;\n        return(/*#__PURE__*/ React.createElement(ContextConsumer, {\n            render: (props)=>{\n                return(/*#__PURE__*/ React.createElement(GoogleChartDataTableInner, Object.assign({}, props, {\n                    google: google,\n                    googleChartWrapper: googleChartWrapper,\n                    googleChartDashboard: googleChartDashboard\n                })));\n            }\n        }));\n    }\n}\n\nclass GoogleChartEvents extends React.Component {\n    shouldComponentUpdate() {\n        return false;\n    }\n    listenToEvents(param) {\n        let { chartEvents , google , googleChartWrapper  } = param;\n        if (!chartEvents) {\n            return;\n        }\n        google.visualization.events.removeAllListeners(googleChartWrapper);\n        for (let event of chartEvents){\n            var _this = this;\n            const { eventName , callback  } = event;\n            google.visualization.events.addListener(googleChartWrapper, eventName, function() {\n                for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                    args[_key] = arguments[_key];\n                }\n                callback({\n                    chartWrapper: googleChartWrapper,\n                    props: _this.props,\n                    google: google,\n                    eventArgs: args\n                });\n            });\n        }\n    }\n    render() {\n        const { google , googleChartWrapper  } = this.props;\n        return(/*#__PURE__*/ React.createElement(ContextConsumer, {\n            render: (propsFromContext)=>{\n                this.listenToEvents({\n                    chartEvents: propsFromContext.chartEvents || null,\n                    google,\n                    googleChartWrapper\n                });\n                return null;\n            }\n        }));\n    }\n}\n\nlet controlCounter = 0;\nclass GoogleChart extends React.Component {\n    componentDidMount() {\n        const { options , google , chartType , chartWrapperParams , toolbarItems , getChartEditor , getChartWrapper ,  } = this.props;\n        const chartConfig = {\n            chartType,\n            options,\n            containerId: this.getGraphID(),\n            ...chartWrapperParams\n        };\n        const googleChartWrapper = new google.visualization.ChartWrapper(chartConfig);\n        googleChartWrapper.setOptions(options || {});\n        if (getChartWrapper) {\n            getChartWrapper(googleChartWrapper, google);\n        }\n        const googleChartDashboard = new google.visualization.Dashboard(this.dashboard_ref);\n        const googleChartControls = this.addControls(googleChartWrapper, googleChartDashboard);\n        if (toolbarItems) {\n            google.visualization.drawToolbar(this.toolbar_ref.current, toolbarItems);\n        }\n        let googleChartEditor = null;\n        if (getChartEditor) {\n            googleChartEditor = new google.visualization.ChartEditor();\n            getChartEditor({\n                chartEditor: googleChartEditor,\n                chartWrapper: googleChartWrapper,\n                google\n            });\n        }\n        this.setState({\n            googleChartEditor,\n            googleChartControls: googleChartControls,\n            googleChartDashboard: googleChartDashboard,\n            googleChartWrapper,\n            isReady: true\n        });\n    }\n    componentDidUpdate() {\n        if (!this.state.googleChartWrapper) return;\n        if (!this.state.googleChartDashboard) return;\n        if (!this.state.googleChartControls) return;\n        const { controls  } = this.props;\n        if (controls) {\n            for(let i = 0; i < controls.length; i += 1){\n                const { controlType , options , controlWrapperParams  } = controls[i];\n                if (controlWrapperParams && \"state\" in controlWrapperParams) {\n                    this.state.googleChartControls[i].control.setState(controlWrapperParams[\"state\"]);\n                }\n                this.state.googleChartControls[i].control.setOptions(options);\n                this.state.googleChartControls[i].control.setControlType(controlType);\n            }\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.state.isReady !== nextState.isReady || nextProps.controls !== this.props.controls;\n    }\n    render() {\n        const { width , height , options , style  } = this.props;\n        const divStyle = {\n            height: height || options && options.height,\n            width: width || options && options.width,\n            ...style\n        };\n        if (this.props.render) {\n            return(/*#__PURE__*/ React.createElement(\"div\", {\n                ref: this.dashboard_ref,\n                style: divStyle\n            }, /*#__PURE__*/ React.createElement(\"div\", {\n                ref: this.toolbar_ref,\n                id: \"toolbar\"\n            }), this.props.render({\n                renderChart: this.renderChart,\n                renderControl: this.renderControl,\n                renderToolbar: this.renderToolBar\n            })));\n        } else {\n            return(/*#__PURE__*/ React.createElement(\"div\", {\n                ref: this.dashboard_ref,\n                style: divStyle\n            }, this.renderControl((param)=>{\n                let { controlProp  } = param;\n                return controlProp.controlPosition !== \"bottom\";\n            }), this.renderChart(), this.renderControl((param)=>{\n                let { controlProp  } = param;\n                return controlProp.controlPosition === \"bottom\";\n            }), this.renderToolBar()));\n        }\n    }\n    constructor(...args1){\n        var _this1;\n        super(), _this1 = this;\n        this.state = {\n            googleChartWrapper: null,\n            googleChartDashboard: null,\n            googleChartControls: null,\n            googleChartEditor: null,\n            isReady: false\n        };\n        this.graphID = null;\n        this.dashboard_ref = /*#__PURE__*/ React.createRef();\n        this.toolbar_ref = /*#__PURE__*/ React.createRef();\n        this.getGraphID = ()=>{\n            const { graphID , graph_id  } = this.props;\n            let instanceGraphID;\n            if (!graphID && !graph_id) {\n                if (!this.graphID) {\n                    instanceGraphID = generateUniqueID();\n                } else {\n                    instanceGraphID = this.graphID;\n                }\n            } else if (graphID && !graph_id) {\n                instanceGraphID = graphID;\n            } else if (graph_id && !graphID) {\n                instanceGraphID = graph_id;\n            } else {\n                instanceGraphID = graphID;\n            }\n            this.graphID = instanceGraphID;\n            return this.graphID;\n        };\n        this.getControlID = (id, index)=>{\n            controlCounter += 1;\n            let controlID;\n            if (typeof id === \"undefined\") {\n                controlID = \"googlechart-control-\".concat(index, \"-\").concat(controlCounter);\n            } else {\n                controlID = id;\n            }\n            return controlID;\n        };\n        this.addControls = (googleChartWrapper, googleChartDashboard)=>{\n            const { google , controls  } = this.props;\n            const googleChartControls = !controls ? null : controls.map((control, i)=>{\n                const { controlID: controlIDMaybe , controlType , options: controlOptions , controlWrapperParams ,  } = control;\n                const controlID = this.getControlID(controlIDMaybe, i);\n                return {\n                    controlProp: control,\n                    control: new google.visualization.ControlWrapper({\n                        containerId: controlID,\n                        controlType,\n                        options: controlOptions,\n                        ...controlWrapperParams\n                    })\n                };\n            });\n            if (!googleChartControls) {\n                return null;\n            }\n            googleChartDashboard.bind(googleChartControls.map((param)=>{\n                let { control  } = param;\n                return control;\n            }), googleChartWrapper);\n            for (let chartControl of googleChartControls){\n                const { control , controlProp  } = chartControl;\n                const { controlEvents =[]  } = controlProp;\n                for (let event of controlEvents){\n                    var _this = this;\n                    const { callback , eventName  } = event;\n                    google.visualization.events.removeListener(control, eventName, callback);\n                    google.visualization.events.addListener(control, eventName, function() {\n                        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                            args[_key] = arguments[_key];\n                        }\n                        callback({\n                            chartWrapper: googleChartWrapper,\n                            controlWrapper: control,\n                            props: _this.props,\n                            google: google,\n                            eventArgs: args\n                        });\n                    });\n                }\n            }\n            return googleChartControls;\n        };\n        this.renderChart = ()=>{\n            const { width , height , options , style , className , rootProps , google  } = this.props;\n            const divStyle = {\n                height: height || options && options.height,\n                width: width || options && options.width,\n                ...style\n            };\n            return(/*#__PURE__*/ React.createElement(\"div\", Object.assign({\n                id: this.getGraphID(),\n                style: divStyle,\n                className: className\n            }, rootProps), this.state.isReady && this.state.googleChartWrapper !== null ? /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(GoogleChartDataTable, {\n                googleChartWrapper: this.state.googleChartWrapper,\n                google: google,\n                googleChartDashboard: this.state.googleChartDashboard\n            }), /*#__PURE__*/ React.createElement(GoogleChartEvents, {\n                googleChartWrapper: this.state.googleChartWrapper,\n                google: google\n            })) : null));\n        };\n        this.renderControl = function() {\n            let filter = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : (param)=>{\n                return true;\n            };\n            return _this1.state.isReady && _this1.state.googleChartControls !== null ? /*#__PURE__*/ React.createElement(React.Fragment, null, _this1.state.googleChartControls.filter((param)=>{\n                let { controlProp , control  } = param;\n                return filter({\n                    control,\n                    controlProp\n                });\n            }).map((param)=>{\n                let { control , controlProp  } = param;\n                return(/*#__PURE__*/ React.createElement(\"div\", {\n                    key: control.getContainerId(),\n                    id: control.getContainerId()\n                }));\n            })) : null;\n        };\n        this.renderToolBar = ()=>{\n            if (!this.props.toolbarItems) return null;\n            return(/*#__PURE__*/ React.createElement(\"div\", {\n                ref: this.toolbar_ref\n            }));\n        };\n    }\n}\n\nclass Chart$1 extends React.Component {\n    render() {\n        const { chartLanguage , chartPackages , chartVersion , mapsApiKey , loader , errorElement ,  } = this.props;\n        return(/*#__PURE__*/ React.createElement(ContextProvider, {\n            value: this.props\n        }, this.state.loadingStatus === \"ready\" && this.state.google !== null ? /*#__PURE__*/ React.createElement(GoogleChart, Object.assign({}, this.props, {\n            google: this.state.google\n        })) : this.state.loadingStatus === \"errored\" && errorElement ? errorElement : loader, /*#__PURE__*/ React.createElement(LoadGoogleCharts, {\n            chartLanguage: chartLanguage,\n            chartPackages: chartPackages,\n            chartVersion: chartVersion,\n            mapsApiKey: mapsApiKey,\n            onLoad: this.onLoad,\n            onError: this.onError\n        })));\n    }\n    componentDidMount() {\n        this._isMounted = true;\n    }\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n    isFullyLoaded(google) {\n        const { controls , toolbarItems , getChartEditor  } = this.props;\n        return google && google.visualization && google.visualization.ChartWrapper && google.visualization.Dashboard && (!controls || google.visualization.ChartWrapper) && (!getChartEditor || google.visualization.ChartEditor) && (!toolbarItems || google.visualization.drawToolbar);\n    }\n    constructor(...args){\n        super(...args);\n        this._isMounted = false;\n        this.state = {\n            loadingStatus: \"loading\",\n            google: null\n        };\n        this.onLoad = (google1)=>{\n            if (this.props.onLoad) {\n                this.props.onLoad(google1);\n            }\n            if (this.isFullyLoaded(google1)) {\n                this.onSuccess(google1);\n            } else {\n                // IE11: window.google is not fully set, we have to wait\n                const id = setInterval(()=>{\n                    const google = window.google;\n                    if (this._isMounted) {\n                        if (google && this.isFullyLoaded(google)) {\n                            clearInterval(id);\n                            this.onSuccess(google);\n                        }\n                    } else {\n                        clearInterval(id);\n                    }\n                }, 1000);\n            }\n        };\n        this.onSuccess = (google)=>{\n            this.setState({\n                loadingStatus: \"ready\",\n                google\n            });\n        };\n        this.onError = ()=>{\n            this.setState({\n                loadingStatus: \"errored\"\n            });\n        };\n    }\n}\nChart$1.defaultProps = chartDefaultProps;\n\nvar GoogleDataTableColumnRoleType;\n(function(GoogleDataTableColumnRoleType) {\n    GoogleDataTableColumnRoleType[\"annotation\"] = \"annotation\";\n    GoogleDataTableColumnRoleType[\"annotationText\"] = \"annotationText\";\n    GoogleDataTableColumnRoleType[\"certainty\"] = \"certainty\";\n    GoogleDataTableColumnRoleType[\"emphasis\"] = \"emphasis\";\n    GoogleDataTableColumnRoleType[\"interval\"] = \"interval\";\n    GoogleDataTableColumnRoleType[\"scope\"] = \"scope\";\n    GoogleDataTableColumnRoleType[\"style\"] = \"style\";\n    GoogleDataTableColumnRoleType[\"tooltip\"] = \"tooltip\";\n    GoogleDataTableColumnRoleType[\"domain\"] = \"domain\";\n})(GoogleDataTableColumnRoleType || (GoogleDataTableColumnRoleType = {}));\n\nvar Chart = Chart$1;\n\nexport { Chart$1 as Chart, GoogleDataTableColumnRoleType, Chart as default };\n//# sourceMappingURL=index.js.map\n","/**\n * WordPress dependencies\n */\n\n/**\n * Internal dependencies\n */\nimport { useAppContext } from '../store/context';\nimport { __ } from '@wordpress/i18n';\n\nexport default () => {\n\tconst { startDate, setStartDate } = useAppContext();\n\treturn (\n\t\t<div className=\"wporg-chart-block__actions\">\n\t\t\t<label htmlFor=\"startDate\">{ __( 'From:', 'wporg-block' ) }</label>\n\t\t\t<input\n\t\t\t\ttype=\"date\"\n\t\t\t\tid=\"startDate\"\n\t\t\t\tvalue={ startDate }\n\t\t\t\tonChange={ ( event ) => setStartDate( event.target.value ) }\n\t\t\t/>\n\t\t</div>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport {\n\tCard,\n\tCardBody,\n\tCardHeader,\n\tFlex,\n\tSpinner,\n} from '@wordpress/components';\nimport { Fragment, useEffect, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport Chart from '../../chart';\nimport Notes from './notes';\n\nexport default ( {\n\tcardTitle,\n\tchartData = [],\n\tchartOptions,\n\tchartType,\n\tchartHeadings,\n\tchartNotes = [],\n\tmapFunction,\n\turl,\n} ) => {\n\tconst [ error, setError ] = useState();\n\tconst [ fetchingData, setFetchingData ] = useState();\n\n\tuseEffect( () => {\n\t\tsetFetchingData( true );\n\t\tapiFetch( {\n\t\t\tpath: url,\n\t\t} )\n\t\t\t.then( ( data ) => {\n\t\t\t\tsetFetchingData( false );\n\t\t\t\tmapFunction( data );\n\t\t\t} )\n\t\t\t.catch( () => {\n\t\t\t\tsetFetchingData( false );\n\t\t\t\tsetError();\n\t\t\t} );\n\t}, [ url ] );\n\n\tconst getContent = () => {\n\t\tif ( error ) {\n\t\t\treturn <p>{ error.message }</p>;\n\t\t}\n\n\t\tif ( fetchingData ) {\n\t\t\treturn (\n\t\t\t\t<Flex align=\"center\" justify=\"center\">\n\t\t\t\t\t<Spinner />\n\t\t\t\t</Flex>\n\t\t\t);\n\t\t}\n\n\t\tif ( ! chartData.length ) {\n\t\t\treturn <p>{ __( 'No Data', 'wporg-block' ) }</p>;\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<Chart\n\t\t\t\t\ttype={ chartType }\n\t\t\t\t\theadings={ chartHeadings }\n\t\t\t\t\tdata={ chartData }\n\t\t\t\t\toptions={ chartOptions }\n\t\t\t\t/>\n\t\t\t\t<Notes notes={ chartNotes } />\n\t\t\t</Fragment>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Card className=\"wporg-chart-block__card\">\n\t\t\t<CardHeader>{ cardTitle }</CardHeader>\n\t\t\t<CardBody>{ getContent() }</CardBody>\n\t\t</Card>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { Fragment, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\nexport default ({ notes }) => {\n\tconst [showNotes, setShowNotes] = useState(true);\n\n\treturn (\n\t\t<div className=\"wporg-chart-block__notes\">\n\t\t\t{notes.length > 0 && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"wporg-chart-block__notes__toggle\"\n\t\t\t\t\t\tonClick={() => setShowNotes(!showNotes)}\n                        isLink={true}\n\t\t\t\t\t>\n\t\t\t\t\t\t{showNotes\n\t\t\t\t\t\t\t? __('Hide notes', 'wporg-block')\n\t\t\t\t\t\t\t: __('Show notes', 'wporg-block')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t{showNotes && (\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{notes.map((note) => (\n\t\t\t\t\t\t\t\t<li key={note}>{note}</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t)}\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n","/**\n * WordPress dependencies\n */\n\nimport { Fragment, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs, removeQueryArgs } from '@wordpress/url';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { AppContext, useAppContext } from './store/context';\nimport Actions from './actions';\nimport BaseControl from './base-control';\n\nconst Block = ({ data }) => {\n\tconst [chartData, setChartData] = useState([]);\n\tconst { startDate } = useAppContext();\n\tconst { title, url, headings, notes, type, options, isPrivate } = data;\n    const _isPrivate = isPrivate === \"true\" ? true : false;\n\n\tconst fullUrl = addQueryArgs(removeQueryArgs(url, 'startDate'), {\n\t\tstartDate,\n\t});\n\n\tconst hasPermission = useSelect(\n\t\t(select) => select(coreStore).canUser('create', 'posts'),\n\t\t[]\n\t);\n\n\t// If it's private only show the card for create capabilities\n\t// Otherwise let the api determine capabilities\n\tif (_isPrivate && !hasPermission) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<BaseControl\n\t\t\tcardTitle={\n\t\t\t\t<Fragment>\n\t\t\t\t\t<div>{title}</div>\n\n\t\t\t\t\t<Actions />\n\t\t\t\t</Fragment>\n\t\t\t}\n\t\t\tchartType={type}\n\t\t\tchartData={chartData}\n\t\t\tchartHeadings={headings.split(',')}\n\t\t\tchartOptions={options.trim().length ? JSON.parse(options) : {}}\n\t\t\tchartNotes={notes.trim().length ? notes.split(',') : []}\n\t\t\turl={fullUrl}\n\t\t\tmapFunction={setChartData}\n\t\t/>\n\t);\n};\n\nexport default (props) => (\n\t<AppContext {...props}>\n\t\t<Block {...props} />\n\t</AppContext>\n);\n","/**\n * WordPress dependencies\n */\nimport { createContext, useContext, useState } from '@wordpress/element';\nimport { getQueryArg } from \"@wordpress/url\";\n\nconst StateContext = createContext();\n\nconst getDate = ( dateObj, subtract = 0 ) => {\n\tconst month = dateObj.getUTCMonth() + 1;\n\tconst paddedMonth = month < 10 ? `0${ month }` : month;\n\tconst year = dateObj.getUTCFullYear() - subtract;\n    const day = dateObj.getUTCDate();\n    const paddedDay = day < 10 ? `0${ day }` : day;\n\n\treturn `${year}-${paddedMonth}-${paddedDay}`;\n};\n\nexport function AppContext( { data, children } ) {\n    const qStartDate = getQueryArg(data.url, 'startDate');\n\n    // If a startDate was added to the url, use that.\n    let initDate = qStartDate ? qStartDate : getDate( new Date(), 2 );\n\tconst [ startDate, setStartDate ] = useState( initDate );\n\n\treturn (\n\t\t<StateContext.Provider\n\t\t\tvalue={ {\n\t\t\t\tstartDate,\n\t\t\t\tsetStartDate,\n\t\t\t} }\n\t\t>\n\t\t\t{ children }\n\t\t</StateContext.Provider>\n\t);\n}\n\nexport function useAppContext() {\n\tconst context = useContext( StateContext );\n\n\tif ( context === undefined ) {\n\t\tthrow new Error( 'useAppContext must be used within a Provider' );\n\t}\n\n\treturn context;\n}\n","/**\n * External dependencies\n */\nimport { Chart } from 'react-google-charts';\n\nexport default ( { headings, data, type = 'LineChart', options } ) => {\n\tconst defaultOptions = {\n\t\tchartArea: { left: 50, top: 30, width: '95%', height: '200' },\n\t\tlegend: { position: 'bottom' },\n        hAxis: {\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        vAxis: {\n            textStyle: {\n                fontSize: 12\n            }\n        },\n\t};\n\n\treturn (\n\t\t<Chart\n\t\t\tchartType={ type }\n\t\t\tdata={ [ headings, ...data ] }\n\t\t\twidth=\"100%\"\n\t\t\theight=\"300px\"\n\t\t\toptions={ { ...options, ...defaultOptions } }\n\t\t\tlegendToggle\n\t\t/>\n\t);\n};\n","/**\n * WordPress dependencies\n */\nimport { createElement, render } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport Block from './block';\nimport './styles.css';\n\nconst init = () => {\n\tconst containers = document.querySelectorAll( '.wporg-chart-block-js' );\n\n\tif ( ! containers.length ) {\n\t\treturn;\n\t}\n\n\t// We may have multiple charts on the same page\n\tcontainers.forEach( ( container ) => {\n\t\trender(\n\t\t\tcreateElement( Block, { data: container.dataset } ),\n\t\t\tcontainer\n\t\t);\n\t} );\n};\n\ndocument.addEventListener( 'DOMContentLoaded', init ); // eslint-disable-line\n","// extracted by mini-css-extract-plugin\nexport {};","(function() { module.exports = window[\"wp\"][\"apiFetch\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"coreData\"]; }());","(function() { module.exports = window[\"wp\"][\"data\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"i18n\"]; }());","(function() { module.exports = window[\"wp\"][\"url\"]; }());","(function() { module.exports = window[\"React\"]; }());"],"sourceRoot":""}